[project]
name = "exoplings"
version = "1.1.0"
description = "NASA SpaceApps 2025 - Interactive Data Visualization Web App"
readme = "README.md"
authors = [
    { name = "Iraklis Konsoulas", email = "dyka3773@gmail.com" },
    { name = "Ioannis Liodis" },
    { name = "Michail Liodis" },
    { name = "Anastasia Topalidou" }
]
requires-python = ">=3.10"
license = "MIT"
dependencies = [
    "flask>=3.1.2",
    "pandas>=2.1.0",
    "plotly>=6.3.0",
    "python-dotenv>=1.1.1",
    "scipy==1.9.3",
    "swyft>=0.4.5",
]

[project.urls]
source = "https://github.com/dyka3773/exoplings"

[project.scripts]
exoplings = "exoplings.app:main"

[dependency-groups]
dev = [
    "python-semantic-release>=10.3.2",
    "build>=1.3.0",
    "git-changelog>=2.6.2",
    "tox>=4.30.2",
    "pytest>=8.4.2",
]

[tool.uv]
package = true

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "pip install build && python -m build"
dist_path = "dist/"
upload_to_pypi = false
upload_to_release = true
remove_dist = false

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "deps", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.git-changelog]
convention = "conventional"
template = "keepachangelog"
sections = [
    {type = "feat", section = "Features", scopes = []},
    {type = "fix", section = "Bug Fixes", scopes = []},
    {type = "refactor", section = "Code Refactoring", scopes = []},
    {type = "perf", section = "Performance Improvements", scopes = []},
    {type = "docs", section = "Documentation", scopes = []},
    {type = "chore", section = "Miscellaneous Chores", scopes = []},
    {type = "ci", section = "Continuous Integration", scopes = []},
    {type = "build", section = "Build System", scopes = []},
    {type = "test", section = "Tests", scopes = []},
    {type = "style", section = "Style", scopes = []},
    {type = "deps", section = "Dependencies", scopes = []},
]

[tool.tox]
env_list = ["lint", "3.10", "3.11", "3.12", "3.13"]

[tool.tox.env_run_base]
description = "Run tests with the current Python version"
deps = [
    "pytest>=pytest>=8.4.2",
]
commands = [[ "pytest", "-v" ]]

[tool.tox.env.lint]
description = "Lint the codebase with ruff"
deps = [
    "ruff>=0.12.3",
]
skip_install = true
commands = [[ "ruff", "check", "src/", "tests/" ]]
